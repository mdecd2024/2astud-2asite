<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2a cd2024 評分網誌 - w10</title><link href="./" rel="alternate"></link><link href="./feeds/w10.atom.xml" rel="self"></link><id>./</id><updated>2024-05-10T09:31:39+08:00</updated><entry><title>W10</title><link href="./41123145-W10.html" rel="alternate"></link><published>2024-04-26T17:00:00+08:00</published><updated>2024-05-10T09:31:39+08:00</updated><author><name>41123145</name></author><id>tag:None,2024-04-26:./41123145-W10.html</id><summary type="html">&lt;p&gt;W10內容&lt;/p&gt;
</summary><content type="html">&lt;p&gt;W10內容&lt;/p&gt;

&lt;h1&gt;任務二 閱讀論文後請將摘要內容放入個人與分組網誌中&lt;/h1&gt;
&lt;h3&gt;論文一：Construction and theoretical study of a ball balancing platform&lt;/h3&gt;
&lt;p&gt;摘要:探討了構建和理論研究球平衡平台的過程。通過應用自動控制理論，研究了穩定動態系統的限制。該研究使用比例-積分-微分控制器來平衡平台上的球，並比較了計算機模擬結果與基於牛頓力學的實際物理結果。研究結果表明，構建的物理模型在某些系統要求方面表現出色，但在靜態誤差方面存在問題。此外，研究還討論了模擬和實際結果之間的差異，並提出了減少建構錯誤的必要措施。&lt;/p&gt;
&lt;p&gt;結論:通過構建球平衡平台並應用控制理論，我們研究了穩定動態系統的挑戰。比較模擬和實際結果，揭示了控制理論在實際應用中的限制。未來研究可專注於改進控制器設計，以應對系統不穩定性，減少模擬與實際結果的差異。这项研究為自動控制理論的實際應用提供了重要啟示。&lt;/p&gt;
&lt;h3&gt;論文二：A real time control system for balancing a ball on a platform with FPGA parallel implementation&lt;/h3&gt;
&lt;p&gt;摘要:提出一個基於PID調節器的新解決方案，用於增加實時平台上球位置調節的準確性。首先，發展了平衡球在平台上的傳遞函數，並合成了用於平衡球在平台上的PID調節器。接著，設計了在FPGA上進行平行計算的PID調節器實現。通過自然模擬證實了增加調節平台上球位置準確性的效果。關鍵詞包括PID控制器、FPGA、VHDL和實時系統。&lt;/p&gt;
&lt;p&gt;結論:在FPGA上實現PID調節器的新方法，可提高實時調節平台上球位置的準確性。通過平行計算，我們成功設計了控制器，可同時控制多個參數，並通過自然模擬驗證了其有效性。這種方法有望應用於實時控制高速對象。&lt;/p&gt;
&lt;h3&gt;論文三：Simulation and Experimental Study of Ball Position Control at Biaxial Platform using State Space Approach&lt;/h3&gt;
&lt;p&gt;摘要:探討了在雙軸平台上平衡球的控制結構，並介紹了使用直流電機和數位信號控制器的基準系統。文中討論了不同的位置估計方法，以及永磁直流電機的數學模型和PD控制器的實驗結果。整體而言，這篇論文強調了控制結構在實際應用中的重要性。&lt;/p&gt;
&lt;p&gt;結論:研究了在雙軸平台上控制球的位置，並提出了三種不同的控制結構。通過實驗和模擬比較，證明了這些控制結構的有效性和可行性。整體而言，這些研究結果對於控制系統設計和應用具有重要價值。&lt;/p&gt;
&lt;h3&gt;論文四：Design and Implementation a Ball Balancing System for Control Theory Course&lt;/h3&gt;
&lt;p&gt;摘要:開發一個球平衡系統，利用微控制器和控制算法來保持球在樑上平衡。通過實時感應反饋，系統調整樑的角度以最小化誤差，同時教導學生有關PID控制。整個系統包括伺服馬達、距離感應器、微控制器板和機械平台，可用於教授本科生控制理論和微控制器編程。該系統的簡化設計將理論知識與實踐技能相連接，並可應用於更複雜的系統。&lt;/p&gt;
&lt;p&gt;結論:球平衡系統是一個廉價的教學工具，旨在教授控制理論應用。學生可以通過實施基於傳感器和微控制器的控制平台來應用他們所學，這與閉環反饋理論相關。整體而言，球樑系統對於開發和展示相關反饋控制算法非常有效。&lt;/p&gt;
&lt;h3&gt;論文五：Ball on the plate balancing control system&lt;/h3&gt;
&lt;p&gt;摘要:探討了關於在平板上平衡球的機械設計和控制算法，提供了對控制系統理解的寶貴見解。該實驗室測試台包括阻性觸摸屏用於球位置數據獲取，帶有位置傳感器的步進馬達用於平台傾斜角度反饋數據，以及基於AVR微控制器的雙環從屬控制系統，其中包括用於維持球位置的PID控制器。&lt;/p&gt;
&lt;p&gt;結論:描述了一個平衡球的實驗室測試台的設計，該設計可用於測試穩定性和平衡控制算法，對於海洋船舶和空中載具等應用可能至關重要。基於微控制器的控制系統追蹤阻性觸摸屏上球的位置並計算位置誤差，從而使球保持在阻性玻璃的中心點。&lt;/p&gt;
&lt;h3&gt;論文六：2D Ball Balancer Control using QUARC&lt;/h3&gt;
&lt;p&gt;摘要:為了幫助使用QUARC軟件控制2D球平衡器的實驗。它包含了設計PID控制器、進行步階響應、坡道響應、正弦響應等的步驟。同時還提供了有關SRV02系統的角度關係、運動方程等的詳細解釋。&lt;/p&gt;
&lt;p&gt;結論:提供了豐富的資訊和步驟，幫助使用者學習如何使用QUARC軟件控制2D球平衡器。通過實驗和模擬，使用者可以設計並實施PID控制器，並評估系統的性能。這將有助於加深對控制系統設計和實施的理解。&lt;/p&gt;</content><category term="w10"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>20240329w10 Spring 課程紀錄</title><link href="./20240426.html" rel="alternate"></link><published>2024-04-26T16:30:00+08:00</published><updated>2024-05-10T09:31:39+08:00</updated><author><name>41123129</name></author><id>tag:None,2024-04-26:./20240426.html</id><summary type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程紀錄&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程紀錄&lt;/p&gt;


&lt;h1&gt;w10&lt;/h1&gt;
&lt;p&gt;鋼球平衡台 PID 控制與模擬&lt;/p&gt;
&lt;p&gt;鋼球平衡台零組件繪圖 各組分工畫圖並錄影&lt;/p&gt;</content><category term="w10"></category><category term="網誌編寫"></category></entry><entry><title>w10</title><link href="./41123105_2024-Spring-w10.html" rel="alternate"></link><published>2024-04-26T16:00:00+08:00</published><updated>2024-05-10T09:31:39+08:00</updated><author><name>41123105</name></author><id>tag:None,2024-04-26:./41123105_2024-Spring-w10.html</id><summary type="html">&lt;p&gt;w10課程&lt;/p&gt;
</summary><content type="html">&lt;p&gt;w10課程&lt;/p&gt;


&lt;p&gt;(任務一)列出個學員的資訊&lt;/p&gt;
&lt;iframe src="https://1drv.ms/t/c/9a62b67559925288/IQOHHVTRwRoHR5SsataPTnSOAToKM19NV2KAroSHj-aaDqg" width="640" height="360" frameborder="0" scrolling="no"&gt;&lt;/iframe&gt;
&lt;p&gt;(任務二)&lt;/p&gt;
&lt;p&gt;(各篇論文要點摘要)&lt;/p&gt;
&lt;p&gt;文章一  : Construction and theoretical study of a ball balancing platform (構建一個球體平衡平台涉及到平台本身的物理結構建造以及用於維持球體平衡的控制算法的理論研究)
摘要內容 : 通過實施自動控制理論穩定動態系統時的局限性, 球平衡平臺的構造和理論研究, 通過實施穩定動態系統時的局限性自動控制理論. 通過物理構造的裝置作為理論的演示者, 進一步比較從牛頓力學得出的事實物理和計算機模擬結果. 為了能夠進行比較, 有必要設計一個能夠滿足系統要求的令人滿意的控制器. 在設備和控制方面, 為在平臺上平衡球的系統引入比例積分導數控制器. 進一步允許分析以確定穩定自然不穩定或半穩定系統時的局限性. 建立球體平衡平台的理論模型, 並與實際搭建的平台進行比較. 分析理論與實際結果之間的差異, 探討控制理論與系統實施的挑戰.&lt;/p&gt;
&lt;p&gt;文章二 : A real time control system for balancing a ball on a platform with FPGA parallel implementation (用於在平臺上平衡球的即時控制系統，具有FPGA並行實現)
摘要內容 : 在一個FPGA晶元上開發了兩個並行PID控制器，用於獨立控制一個物件的兩個參數。確保了控制物件的PID控制器的輪廓計算的並行處理，調節器的輸出已經歸一化。通過自然類比，提高了在平台上調節球位置的精度。設計的控制器可用於即時控制具有許多受控參數的高速物體。&lt;/p&gt;
&lt;p&gt;文章三 : Simulation and Experimental Study of Ball Position Control at Biaxial Platform using State Space Approach (基於狀態空間方法的雙軸平臺球位控制模擬與實驗研究)
摘要內容 : 本研究詳細設計並比較了三種控制結構，用於自動穩定球在板上的位置和球的軌跡跟蹤。即PD控制器、狀態空間反饋和狀態空間觀測器。所有三種方法都經過設計並進行了實際比較。所有結構都有一個共同的特徵。它是計算控制器參數的方法。通過牛頓方法推導的板上球數學模型和直流電機位置環路控制也是本文的一部分。&lt;/p&gt;
&lt;p&gt;文章四：Design and Implementation a Ball Balancing System for Control Theory Course（控制理論課程的球平衡系統設計與實現）
摘要內容：開發一個球平衡系統，使用微控制器和相關控制演算法來保持球在橫樑上的平衡，以通過即時感官反饋調整橫樑的角度。在此過程中，製作了三個原型並相互比較，特別是在合理性和成本方面。通過集成一個伺服電機、一個距離感測器、一個微控制器板和一個機械平臺，可以很容易地設計整個系統。此外，他們將通過微控制器程式設計來理解和實現控制演算法。如果學生對MATLAB知之甚少。開發介面程式以在MATLAB中繪製即時位置曲線。這個簡化的系統將作為連接理論知識和實踐技能的橋樑。所提方法也適用於更複雜的系統。&lt;/p&gt;
&lt;p&gt;文章五: Ball on the plate balancing control system (板上球平衡控制系統)
摘要內容 : 平衡問題是一個持續的研究挑戰，適用於從教育到交通的許多興趣領域。二自由度球平衡實驗室試驗台是瞭解控制系統的重要設備。本文重點介紹了在板上平衡球的機械設計。使用電阻式觸摸屏獲取球體位置數據，使用步進電機和位置傳感器控制平台傾斜角度。 設計基於 AVR 微控制器的雙環下屬控制系統，使用 PID 控制器維持球體平衡。&lt;/p&gt;
&lt;p&gt;文章六 : 2D Ball Balancer Control using QUARC (使用 QUARC 的 2D 球平衡器控制)
摘要內容 : 使用 QUARC 軟體設計和實現球體在二維平台上的位置控制。 設計 PD 和 PID 控制器，並探討設定點權重和積分器抗飽和等控制技術。 使用攝像頭讀取球體位置，並進行校準和轉換。&lt;/p&gt;</content><category term="w10"></category><category term="網誌編寫"></category></entry><entry><title>W10</title><link href="./W10.html" rel="alternate"></link><published>2024-04-26T15:00:00+08:00</published><updated>2024-05-10T09:31:39+08:00</updated><author><name>41123149</name></author><id>tag:None,2024-04-26:./W10.html</id><summary type="html">&lt;p&gt;2024/04/26 上課內容&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024/04/26 上課內容&lt;/p&gt;


&lt;h1&gt;W10分組任務&lt;/h1&gt;
&lt;p&gt;任務一:&lt;/p&gt;
&lt;p&gt;建立2a各學員的倉儲、網站與分組連結&lt;/p&gt;
&lt;p&gt;以下為各學員的倉儲程式&lt;/p&gt;
&lt;pre class="brush: python"&gt;

  from browser import window, ajax, document, html

  def fetch_csv_data():
    # CSV 檔案網址
    url = "https://mdecd2024.github.io/2astud-2asite/downloads/2a.txt"

    def on_complete(req):
      if req.status == 200 or req.status == 0:
        # 讀取 CSV 檔案內容
        content = req.text

        # 依照換行符號拆分資料
        lines = content.split('\n')

        # 建立空列表儲存資料
        data = []

        # 遍歷每一行資料
        for line in lines:
          # 忽略空白行
          if line.strip() == "":
            continue

          # 依照逗號拆分資料
          items = line.split(',')

          # 將拆分後的資料加入列表
          data.append(items)

        # 必須去除 data 的第一列標題資料, 只取序號為 1 之後的資料
        data = data[1:]

        # 取得 html 可以插入的標註位置
        brython_div = document["brython_div1"]
        course_title = "cd2024"

        # 逐一處理學員資料
        index = 0
        for items in data:
          index += 1
          student_id, github_username, group = items

          if github_username == "":
            github_username = "000"

          # 建立網站和倉儲連結，使用正確的模板
          site_url = f"https://{github_username}.github.io/{course_title}"
          repo_url = f"https://github.com/{github_username}/{course_title}"
          group_site_url = f"https://mdecd2024.github.io/2a-midag{group}"
          group_repo_url = f"https://github.com/mdecd2024/2a-midag{group}"

          # 添加學號, 網站, 倉儲連結和序號到 brython_div
          brython_div &lt;= str(index) + ". " + html.A(student_id, href=site_url)
          brython_div &lt;= " ("
          brython_div &lt;= html.A("repo", href=repo_url)
          brython_div &lt;= ") | " 
          brython_div &lt;= html.A("Group Site", href=group_site_url)
          brython_div &lt;= " | "
          brython_div &lt;= html.A("Group Repo", href=group_repo_url)
          brython_div &lt;= html.BR()

      else:
        print("Error:", req.text)

    # 發送 AJAX 請求
    req = ajax.ajax()
    req.bind('complete', on_complete)
    req.open('GET', url, True)
    req.set_header('content-type', 'application/x-www-form-urlencoded')
    req.send()

  # 呼叫函式讀取 CSV 資料
  fetch_csv_data()

&lt;/pre&gt;</content><category term="W10"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>W10</title><link href="./10.html" rel="alternate"></link><published>2024-04-26T11:00:00+08:00</published><updated>2024-05-10T09:31:39+08:00</updated><author><name>41123122</name></author><id>tag:None,2024-04-26:./10.html</id><summary type="html">&lt;p&gt;W10所做事情&lt;/p&gt;
</summary><content type="html">&lt;p&gt;W10所做事情&lt;/p&gt;


&lt;h1&gt;建立各班學員的倉儲、網站與分組連結&lt;/h1&gt;
&lt;p&gt;&lt;a href="[https://gist.githubusercontent.com/Corn723/2ea227f659c363e1c80c08323c2263d9/raw/4806cbadabed917b125c220163569042cc949680/W10]"&gt;gist連結&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;RUN完從左到右分別是學員網頁、學員倉儲、學員分組網頁、學員分組倉儲
&lt;a href="[https://41123122.github.io/cd2024/content/Brython.html?src=https://gist.githubusercontent.com/41123122/2c06cbb0abf7903e87c69e8fb38c05bd/raw/c7381db8e71a03d8bdc88205c407eb601128b744/W10]"&gt;連結&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;做法:
靜態連結後面加上?src=在接上gist連結
就能使用 Brython 產生員網頁、學員倉儲、學員分組網頁、學員分組倉儲&lt;/p&gt;
&lt;p&gt;以下為程式本體&lt;/p&gt;
&lt;pre class="brush: python"&gt;
  from browser import window, ajax, document, html

  def fetch_csv_data():
    # CSV 檔案網址
    url = "https://mdecd2024.github.io/2astud-2asite/downloads/2a.txt"

    def on_complete(req):
      if req.status == 200 or req.status == 0:
        # 讀取 CSV 檔案內容
        content = req.text

        # 依照換行符號拆分資料
        lines = content.split('\n')

        # 建立空列表儲存資料
        data = []

        # 遍歷每一行資料
        for line in lines:
          # 忽略空白行
          if line.strip() == "":
            continue

          # 依照逗號拆分資料
          items = line.split(',')

          # 將拆分後的資料加入列表
          data.append(items)

        # 必須去除 data 的第一列標題資料, 只取序號為 1 之後的資料
        data = data[1:]

        # 取得 html 可以插入的標註位置
        brython_div = document["brython_div1"]
        course_title = "cd2024"

        # 逐一處理學員資料
        index = 0
        for items in data:
          index += 1
          student_id, github_username, group = items

          if github_username == "":
            github_username = "000"

          # 建立網站和倉儲連結，使用正確的模板
          site_url = f"https://{github_username}.github.io/{course_title}"
          repo_url = f"https://github.com/{github_username}/{course_title}"
          group_site_url = f"https://mdecd2024.github.io/2a-midag{group}"
          group_repo_url = f"https://github.com/mdecd2024/2a-midag{group}"

          # 添加學號, 網站, 倉儲連結和序號到 brython_div
          brython_div &lt;= str(index) + ". " + html.A(student_id, href=site_url)
          brython_div &lt;= " ("
          brython_div &lt;= html.A("repo", href=repo_url)
          brython_div &lt;= ") | "
          brython_div &lt;= html.A("Group Site", href=group_site_url)
          brython_div &lt;= " | "
          brython_div &lt;= html.A("Group Repo", href=group_repo_url)
          brython_div &lt;= html.BR()

      else:
        print("Error:", req.text)

    # 發送 AJAX 請求
    req = ajax.ajax()
    req.bind('complete', on_complete)
    req.open('GET', url, True)
    req.set_header('content-type', 'application/x-www-form-urlencoded')
    req.send()

  # 呼叫函式讀取 CSV 資料
  fetch_csv_data()
&lt;/pre&gt;
&lt;h1&gt;分組作任務三&lt;/h1&gt;
&lt;p&gt;零件分別為四個部分繪製
[base]&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/npBgae2QfhQ?si=aoZp2KOBERmcVlY-" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;[platform]&lt;/p&gt;
&lt;iframe width="653" height="351" src="https://www.youtube.com/embed/yvoLvFX4Kus" title="platform繪製" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;[Lever] &lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/vXR0OEnA6AI?si=yJoMpw1OrkQpHgi1" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;[hinge last]&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/5anto_dt76Q?si=z3K4D8ebd8zjjVDV" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;</content><category term="W10"></category><category term="網誌編寫"></category></entry><entry><title>w10課程 41123152</title><link href="./2024-Spring-w10-blog-tutorial-41123152.html" rel="alternate"></link><published>2024-04-26T11:00:00+08:00</published><updated>2024-05-10T09:31:39+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-04-26:./2024-Spring-w10-blog-tutorial-41123152.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程w10.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程w10.&lt;/p&gt;


&lt;h1&gt;今日課程內容&lt;/h1&gt;
&lt;p&gt;完成Latex翻譯並上傳至Downloads中&lt;/p&gt;</content><category term="w10"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>W10</title><link href="./20240426.html" rel="alternate"></link><published>2024-04-26T11:00:00+08:00</published><updated>2024-05-10T09:31:39+08:00</updated><author><name>41123139</name></author><id>tag:None,2024-04-26:./20240426.html</id><summary type="html">&lt;p&gt;2024/04/26第十週網誌內容.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024/04/26第十週網誌內容.&lt;/p&gt;


&lt;h1&gt;完成老師指派的任務&lt;/h1&gt;
&lt;p&gt;1.任務一建立各班學員的&lt;a href="https://github.com/41123139/cd2024"&gt;倉儲&lt;/a&gt;、&lt;a href="https://41123139.github.io/cd2024"&gt;網站&lt;/a&gt;與&lt;a href="https://github.com/mdecd2024/2a-midag3"&gt;分組連結&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2.任務二鋼球平衡台 PID 控制與模擬&lt;/p&gt;
&lt;p&gt;3.任務三鋼球平衡台零組件繪圖
負責畫&lt;a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41123139_nfu_edu_tw/EQddYVRixmNBicatYh3iyogBX0Ss4yPbkrqiASqoObAfKw?e=qg1PH6"&gt;base&lt;/a&gt;&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/npBgae2QfhQ?si=aoZp2KOBERmcVlY-" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;</content><category term="w10"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>W10</title><link href="./W10.html" rel="alternate"></link><published>2024-04-26T11:00:00+08:00</published><updated>2024-05-10T09:31:39+08:00</updated><author><name>41123134</name></author><id>tag:None,2024-04-26:./W10.html</id><summary type="html">&lt;p&gt;2024/04/26 上課內容&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024/04/26 上課內容&lt;/p&gt;


&lt;h1&gt;W10分組任務&lt;/h1&gt;
&lt;p&gt;W10任務一:
列出 2a 各學員評分相關網站
 以下為各學員的倉儲的程式&lt;/p&gt;
&lt;pre class="brush: python"&gt;

  from browser import window, ajax, document, html

  def fetch_csv_data():
    # CSV 檔案網址
    url = "https://mdecd2024.github.io/2astud-2asite/downloads/2a.txt"

    def on_complete(req):
      if req.status == 200 or req.status == 0:
        # 讀取 CSV 檔案內容
        content = req.text

        # 依照換行符號拆分資料
        lines = content.split('\n')

        # 建立空列表儲存資料
        data = []

        # 遍歷每一行資料
        for line in lines:
          # 忽略空白行
          if line.strip() == "":
            continue

          # 依照逗號拆分資料
          items = line.split(',')

          # 將拆分後的資料加入列表
          data.append(items)

        # 必須去除 data 的第一列標題資料, 只取序號為 1 之後的資料
        data = data[1:]

        # 取得 html 可以插入的標註位置
        brython_div = document["brython_div1"]
        course_title = "cd2024"

        # 逐一處理學員資料
        index = 0
        for items in data:
          index += 1
          student_id, github_username, group = items

          if github_username == "":
            github_username = "000"

          # 建立網站和倉儲連結，使用正確的模板
          site_url = f"https://{github_username}.github.io/{course_title}"
          repo_url = f"https://github.com/{github_username}/{course_title}"
          group_site_url = f"https://mdecd2024.github.io/2a-midag{group}"
          group_repo_url = f"https://github.com/mdecd2024/2a-midag{group}"

          # 添加學號, 網站, 倉儲連結和序號到 brython_div
          brython_div &lt;= str(index) + ". " + html.A(student_id, href=site_url)
          brython_div &lt;= " ("
          brython_div &lt;= html.A("repo", href=repo_url)
          brython_div &lt;= ") | " 
          brython_div &lt;= html.A("Group Site", href=group_site_url)
          brython_div &lt;= " | "
          brython_div &lt;= html.A("Group Repo", href=group_repo_url)
          brython_div &lt;= html.BR()

      else:
        print("Error:", req.text)

    # 發送 AJAX 請求
    req = ajax.ajax()
    req.bind('complete', on_complete)
    req.open('GET', url, True)
    req.set_header('content-type', 'application/x-www-form-urlencoded')
    req.send()

  # 呼叫函式讀取 CSV 資料
  fetch_csv_data()
&lt;/pre&gt;
&lt;p&gt;W10任務二:下載 cd2024_ball_balancing_platform_control_ref.7z此檔案，觀看內容並整理出大綱。
W10任務三:小組分配繪圖，鋼球平衡台零組件繪圖。&lt;a href="https://mdecd2024.github.io/2a-midag3/blog/W10.html"&gt;已完成&lt;/a&gt;&lt;/p&gt;</content><category term="W10"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>w10</title><link href="./w10.html" rel="alternate"></link><published>2024-04-26T11:00:00+08:00</published><updated>2024-05-10T09:31:39+08:00</updated><author><name>41123131</name></author><id>tag:None,2024-04-26:./w10.html</id><summary type="html">&lt;p&gt;w10上課內容.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;w10上課內容.&lt;/p&gt;


&lt;h1&gt;任務一:建立各班學員的倉儲、網站與分組連結&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://mde.tw/cd2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/8ba6fa28317bc7a784d8350e7bc33580/raw/a035644a54de63d3b920211e78e7532837bda516/2a_w10_step2.py"&gt;列出2a成員名單&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;任務二:鋼球平衡台 PID 控制與模擬&lt;/p&gt;
&lt;p&gt;任務三
platform繪製&lt;/p&gt;
&lt;iframe width="653" height="351" src="https://www.youtube.com/embed/yvoLvFX4Kus" title="platform繪製" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41123131_nfu_edu_tw/EQGoppGu14BEk651TufslQABKJo2sagJtCSFk1J_bxxoLw?e=1EaFdj"&gt;檔案下載&lt;/a&gt;&lt;/p&gt;</content><category term="w10"></category><category term="網誌編寫"></category><category term="pelicanch"></category></entry><entry><title>W10</title><link href="./10.html" rel="alternate"></link><published>2024-03-08T01:20:00+08:00</published><updated>2024-05-10T09:31:39+08:00</updated><author><name>Peggy</name></author><id>tag:None,2024-03-08:./10.html</id><summary type="html">&lt;p&gt;2024/04/26 Spring 網際內容管理與協同產品設計實習課程&amp;lt;&amp;lt;&amp;lt;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024/04/26 Spring 網際內容管理與協同產品設計實習課程&amp;lt;&amp;lt;&amp;lt;&lt;/p&gt;


&lt;h1&gt;內容管理系統41123137&lt;/h1&gt;
&lt;h1&gt;第十周進度&lt;/h1&gt;
&lt;p&gt;1.W10實習任務一:
2.W10實習任務二:下載壓縮檔進行解壓縮然後打開資料夾PDF觀看內容整理出大綱
3.W10實習任務三:鋼球平衡台零組件繪圖,將過程影片上傳到自己的blog以及小組倉儲裡面&lt;/p&gt;
&lt;p&gt;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&lt;/p&gt;
&lt;p&gt;使用者可以自行利用 &lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; 倉儲作為 Template, 建立自己的網站內容管理系統.&lt;/p&gt;
&lt;p&gt;引用網站網址連結的方法:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 在文章中多次引用同一個網站連結時, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;https://github.com/mdecycu/cmsimde_site&lt;/a&gt; - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 也可以使用 Markdown 的標準網站連結使用格式.&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# 引用 Python 程式的方法
for i in range(10):
    print(i, "列出字串")
&lt;/pre&gt;

&lt;p&gt;也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼.&lt;/p&gt;
&lt;p&gt;從 1 累加到 100:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100"&gt;1 add to 100&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;將 iterable 與 iterator &lt;a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438"&gt;相關說明&lt;/a&gt;, 利用 Brython 與 Ace Editor 整理在這個頁面.&lt;/p&gt;
&lt;!-- 導入 brython 程式庫 --&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 FileSaver 與 filereader --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/FileSaver.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/filereader.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 ace --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/ace.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/ext-language_tools.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/mode-python3.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/snippets/python.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 --&gt;
&lt;script src="./../cmsimde/static/Cango-24v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/gearUtils-09.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/SVGpathUtils-6v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/sylvester.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/PrairieDraw.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript"&gt;
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 結束--&gt;&lt;/p&gt;
&lt;!-- editor1 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor1" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run1"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console1"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console1"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd1"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console1"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div1"&gt;&lt;/div&gt;
&lt;!-- editor1 結束 --&gt;
&lt;hr/&gt;&lt;!-- ########################################## --&gt;&lt;p&gt;從 1 累加到 100 part2:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100part2"&gt;1 add to 100&lt;/button&gt;&lt;button id="cango_three_gears"&gt;cango_three_gears&lt;/button&gt;&lt;button id="bsnake"&gt;BSnake&lt;/button&gt;&lt;button id="aitetris"&gt;AI Tetris&lt;/button&gt;&lt;button id="threejsblock"&gt;Rotating Block&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 結束--&gt;&lt;/p&gt;
&lt;!-- editor2 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor2" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename2" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run2"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console2"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console2"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd2"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console2"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div2"&gt;&lt;/div&gt;
&lt;!-- editor2 結束 --&gt;
&lt;hr/&gt;&lt;p&gt;
&lt;script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"&gt;&lt;/script&gt;</content><category term="w10"></category><category term="網誌編寫"></category><category term="pelican"></category></entry></feed>