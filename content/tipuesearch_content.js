var tipuesearch = {"pages": [{'title': 'About', 'text': '網頁:\xa0 https://mdecd2024.github.io/2astud-2asite/ \xa0 \n 網誌:\xa0 https://mdecd2024.github.io/2astud-2asite/blog \xa0 \n 簡報:\xa0 https://mdecd2024.github.io/2astud-2asite/reveal \xa0 \n 倉儲:\xa0 https://github.com/mdecd2024/2astud-2asite \xa0 \n', 'tags': '', 'url': 'About.html'}, {'title': '專案', 'text': '', 'tags': '', 'url': '專案.html'}, {'title': 'mdecycu', 'text': '', 'tags': '', 'url': 'mdecycu.html'}, {'title': 'g3', 'text': '41123135: \n 這堂課讓我學習到了許多管理github的功能，也讓我知道了管理版次是多麼重要的工作，只是主要的協同部分還有點不是很熟練。也學習到了可以利用程式來控制物體的運動。 \n', 'tags': '', 'url': 'g3.html'}, {'title': 'g5', 'text': '\n 40923131 \n', 'tags': '', 'url': 'g5.html'}, {'title': 'g6', 'text': '41023124 :\xa0 \n <<<<<<< HEAD \n \n ======= \n 協同產品設計與實習這門課相較於較為傳統的上課方式有很大的不同，課堂並不是只有死板的知識與課本，需要利用網絡、AI去幫助自己與群組完成共同的編輯與協同，在這門課中使用 Github、Codespace、Replit、Odoo、NX、Coppeliasim去完成協同與繪製任務，也強調了組員之間的分工與合作，才能迅速的完成老師在每一周交代的任務。 \n >>>>>>> cc56ed4699131afcacbb6deb2822efba3c71f2f7 \n', 'tags': '', 'url': 'g6.html'}, {'title': 'g7', 'text': '\n 41123141 \n 41123143: \n 協同產品設計是一門極具挑戰性且充滿樂趣的課程，在這門課程我們使用工具和平台來管理我們的專案，例如github、NX、Python、Replit . . .等等。這門課強調團隊合作的重要性，並且學會如何更好地組織和管理我們的專案，並最終創造出更優秀的產品。 \n 41123144: \n 這門課主要使用了Replit、Codespace 來維護自己與組別的網站,並且須要使用如 ChatGPT 、NX 來完成每週的課程任務，而所有的組別任務皆須分工來完成才能更有效率地達成目標，這更讓我體認到小組分工的重要性。 \n 41136113: \n 在協同產品設計這門課中，我學到了很多關於團隊合作和管理項目的知識。這門課和傳統的上課方式不同，我的組別使用了多種工具和平台，比如Github、Replit、Odoo、NX、Coppeliasim等，來協同工作和管理我們的專案。在這門課上，我們學習了如何使用這些工具來完成任務，同時還意識到團隊分工的重要性。透過合作，我們可以更快速、更有效地完成每週的任務。使用程式來控制物體的運動，並利用AI等新興技術，讓我感受到技術的力量和可能性。在協同產品設計的過程中，我體會到團隊合作的重要性，也學到了如何在多個人協作的情況下保持項目的進度和品質。這門課教會了我如何在實際環境中使用技術，同時讓我理解到通過合作和溝通，可以達到比個人單打獨鬥更好的效果。 \n', 'tags': '', 'url': 'g7.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};