<h1>About</h1>
<p>網頁: <a href="https://mdecd2024.github.io/2astud-2asite/">https://mdecd2024.github.io/2astud-2asite/</a> </p>
<p>網誌: <a href="https://mdecd2024.github.io/2astud-2asite/blog">https://mdecd2024.github.io/2astud-2asite/blog</a> </p>
<p>簡報: <a href="https://mdecd2024.github.io/2astud-2asite/reveal">https://mdecd2024.github.io/2astud-2asite/reveal</a> </p>
<p>倉儲: <a href="https://github.com/mdecd2024/2astud-2asite">https://github.com/mdecd2024/2astud-2asite</a> </p>
<h1>專案</h1>
<h2>g1</h2>
<p>41123120:<br/>從一年級開始接觸github，replit一些基礎的技巧之後，在二下這門課變得輕鬆不少。除了基本的維護倉儲，這學期開始學習網誌的編寫，每週也學習不同領域的知識；例如操作繪圖軟體、幫影片上字幕、透過Chat GPT輔助翻譯論文並統整其內容大綱，這些都有別於以往的課程專注於單一領域的學習，更有多方學習的效果。</p>
<p>41123124:</p>
<p><span>對於網站編寫的流程有一點點的了解，經常在滑社群網站也會看到很多關於java或是html的廣告教學，不禁會讓我想到我們使用replit建立的靜態網站，想必這在未來會是一大趨勢。但是在這些作業完成的前提之下，我可能還需要學習如何管理一個群組，像是組員的進度不一致或是</span><span>大家遇到一樣的問題卡關</span><span>的時候，常有每個人都不知道怎麼做而愣在一旁，我自己透過詢問老師以及chatGPT有得到相當大的解答。再將資訊給組員參考。除了寫程式以外更了解到這些原理的背後運作方式，有效率的消化多方面不同的改版，最後可以在網路上共同完成。老師提到現今的機械企業在處理眾多改版以及客戶以及工程師溝通上的問題，我們所學習的協同設計就應該要可以融合在CAD上，在零件上的討論修改等等。修這門課可以讓我在未來更有競爭裡且對於我自己想走的路線是頗有幫助的，雖然語言程式真的很難。</span></p>
<p></p>
<h2>g2</h2>
<p>41123123</p>
<p>在這堂課中，我學習到了如何建立和維護網誌和網站，還有使用 Git 分支和 Source Tree 等工具進行專案管理，也學到<span>了NX、Onshape等設計軟體，以及詢問AI來解決問題的方法</span></p>
<p>41123105</p>
<p><span>透過 GitHub、Replit 和 Nx，我學會了團隊合作、版本控制、程式開發、除錯和專案管理等關鍵技能。這些工具的結合讓學習更有效率和有趣，為我的程式設計之路開啟了新的可能性。</span></p>
<p><span>41123119</span></p>
<p>這堂課與一般中式教育的方式不同<span>，</span>比較像是西方教育<span>，</span><span>更加強調學生的自主學習和思考能力，鼓勵他們提出問題、進行討論和獨立思考。培養學生的實際技能和解決問題的能力，而不僅僅是死記硬背知識。例如 解決版本衝突 latex整合 等。</span></p>
<p></p>
<p>41123130</p>
<p><span>這堂課程使用了 GitHub、Replit、Nx 等軟體，透過 Git我學會了團隊合作和版本控制的重要性；Replit 讓我更深入瞭解了程式開發環境的建置和除錯；而 Nx 則提供了更有效的專案管理和程式碼組織技巧。這些工具的結合，讓學習過程更加互動和實用。</span></p>
<p><span>41123145</span></p>
<p>使用github啟動codespaces維護動態網站以及更新網誌，之前只學會了replit更新網站以及網誌，這學期學會了<span>codespaces更新更加方便，只需要在終端機打幾行指令，就可以完成倉儲更新。</span></p>
<p>41123152<br/>這堂課讓我學習到如何建立、更新、維護、除錯一個屬於自己的網站，學習了NX、Onshape等設計軟體，也學會了團隊合作和版本控制的重要性，以及如何簡化維護流程，學會了如何幫影片上字幕。</p>
<p>41023156</p>
<p>開學到現在已經第11週，每週的任務都不一樣，讓印象最深刻的是學會如何使用replite更新自己的網誌，還有將教學影片上字幕跟製作其中整合影片，讓我學到如何跟組員一起討論和分工合作，這是一堂值得學習的課程</p>
<p>41123124:</p>
<p>關於網站編寫的流程有一點點的了解，經常在滑社群網站也會看到很多關於java或是html的廣告教學，不禁會讓我想到我們使用replit建立的靜態網站，想必這在未來會是一大趨勢。但是在這些作業完成的前提之下，我可能還需要學習如何管理一個群組，像是組員的進度不一致或是大家遇到一樣的問題卡關的時候，常有每個人都不知道怎麼做而愣在一旁，我自己透過詢問老師以及chatGPT有得到相當大的解答。再將資訊給組員參考。除了寫程式以外更了解到這些原理的背後運作方式，有效率的消化多方面不同的改版，最後可以在網路上共同完成。老師提到現今的機械企業在處理眾多改版以及客戶以及工程師溝通上的問題，我們所學習的協同設計就應該要可以融合在CAD上，在零件上的討論修改等等。修這門課可以讓我在未來更有競爭裡且對於我自己想走的路線是頗有幫助的，雖然語言程式真的很難。</p>
<p>41123120:<br/>從一年級開始接觸github，replit一些基礎的技巧之後，在二下這門課變得輕鬆不少。除了基本的維護倉儲，這學期開始學習網誌的編寫，每週也學習不同領域的知識；例如操作繪圖軟體、幫影片上字幕、透過Chat GPT輔助翻譯論文並統整其內容大綱，這些都有別於以往的課程專注於單一領域的學習，更有多方學習的效果。</p>
<h2>g3</h2>
<p>41123122:</p>
<p></p>
<p>41123135:</p>
<p>這堂課讓我學習到了許多管理github的功能，也讓我知道了管理版次是多麼重要的工作，只是主要的協同部分還有點不是很熟練。也學習到了可以利用程式來控制物體的運動。</p>
<p>41123149:</p>
<p>這門協同產品設計課程讓我學會了如何使用 github 來更新blog，並<span>使用Replit、Codespaces去維護個人或分組網站，雖然學得不是很深，但我還是持續努力完成每周的分組作業。</span></p>
<p></p>
<h2>g4</h2>
<p>41123111心得:</p>
<p><span>這門課學到了如何使用Git和GitHub進行團隊合作，提高了專案管理能力。通過Replit和Nx等工具，加強了程式開發環境建置和代碼組織技巧。在協同產品設計中，體會到團隊合作的重要性，並探索了AI工具的應用。受益匪淺並增加職業發展價值。</span></p>
<p><span>41123117心得:</span></p>
<p><span>這學期初學到了新的知識，使用replit、codespaces去維護個人或分組網站的內容，並且學到了如何創建新的分支來進行同步上傳避免全部撞在一起，還有跟chatgpt對話讓我可以自己解決許多問題，真的讓我受益良多</span></p>
<p><span>41123128心得:</span></p>
<p><span>這堂課學習到現在，我學習到了如何建立和維護網誌和網站，每週的網誌也讓我更能了解每次的進度，在課堂中也學習了解決衝突的技巧等，在每次的課堂任務中也讓我體會到小組分工的重要性。</span></p>
<p>41123126心得:</p>
<p>我在這門課學到了一個新的網頁概念，我在github上找到了許多其他創作者的內容，涵蓋的範圍之廣，不過要獲取他人的內容，也要先學會如何使用github，這門課讓我學到了許多關於github，創作網頁的技能，因為這門課，以後在使用不管是網路或是程式，在與世界接軌時，也用一定的基礎可以應對。</p>
<p>41123114心得:</p>
<p>這門課我學到了怎麼使用github以及replit分工合作，然後再把每個人的資料整合，藉由老師給的專案設計學習到了基礎的python設計，以及使用NX繪製然後跟程式結合使其可以運作，老師也會鼓勵我們多使用AI學習和解決問題，讓我了解到AI雖然很聰明不過也很笨，如果知識不夠沒辦法找出問題核心提問，也無法解決問題，不過透過上述這些課題及與AI的合作讓我學習到了許多平常不會接觸到的知識，增加了許多對自己每使用的3C產品和AI還有程式設計的認識。</p>
<p></p>
<p>41123107心得:</p>
<p>在這堂產品協同設計課程學習到如何使用github、replit、nx等作業工具，學習到團隊合作的重要性，也學會了使用chatgpt尋找答案。</p>
<p></p>
<p>41123111心得:</p>
<p><span>這門課學到了如何使用Git和GitHub進行團隊合作，提高了專案管理能力。通過Replit和Nx等工具，加強了程式開發環境建置和代碼組織技巧。在協同產品設計中，體會到團隊合作的重要性，並探索了AI工具的應用。受益匪淺並增加職業發展價值。</span></p>
<p><span>41123117心得:</span></p>
<p><span>這學期初學到了新的知識，使用replit、codespaces去維護個人或分組網站的內容，並且學到了如何創建新的分支來進行同步上傳避免全部撞在一起，還有跟chatgpt對話讓我可以自己解決許多問題，真的讓我受益良多</span></p>
<p><span>41123128心得:</span></p>
<p><span>這堂課學習到現在，我學習到了如何建立和維護網誌和網站，每週的網誌也讓我更能了解每次的進度，在課堂中也學習了解決衝突的技巧等，在每次的課堂任務中也讓我體會到小組分工的重要性。</span></p>
<p>41123126心得:</p>
<p>我在這門課學到了一個新的網頁概念，我在github上找到了許多其他創作者的內容，涵蓋的範圍之廣，不過要獲取他人的內容，也要先學會如何使用github，這門課讓我學到了許多關於github，創作網頁的技能，因為這門課，以後在使用不管是網路或是程式，在與世界接軌時，也用一定的基礎可以應對。</p>
<p>41123115心得:</p>
<p>剛接觸這堂課先認識到了小組分工合作的重要性,利用Replit或是codespace來更新小組倉儲內容,這堂課不單單只是讓我學習到繪圖設計,也學到了網際網路各方面知識,這堂課是延續大二上的內容是利用NX轉檔到coppeliasim來模擬鋼球移動的模擬程式,這次也有用到所以應該多少會比較好理解老師在說什麼.</p>
<p></p>
<p>41123111心得:</p>
<p>我在這門課學到了用GitHub進行團隊合作，整組可以一起上傳檔案，只是過程中很多衝突需要去處理，處理的過程中我也感覺到自己提升了很多這方面的知識。這學期還開始學習了網誌的編寫，利用ai翻譯論文並統整，幫影片上字幕。這次的課程讓我學到了如何與組員溝通，解決衝突，效率也比一個人慢慢做快多了，讓我體會到團隊分工的重要性。</p>
<p>41123111心得:</p>
<p><span>這門課學到了如何使用Git和GitHub進行團隊合作，提高了專案管理能力。通過Replit和Nx等工具，加強了程式開發環境建置和代碼組織技巧。在協同產品設計中，體會到團隊合作的重要性，並探索了AI工具的應用。受益匪淺並增加職業發展價值</span></p>
<p><span>41123117心得:</span></p>
<p><span>這學期初學到了新的知識，使用replit、codespaces去維護個人或分組網站的內容，並且學到了如何創建新的分支來進行同步上傳避免全部撞在一起，還有跟chatgpt對話讓我可以自己解決許多問題，真的讓我受益良多</span></p>
<p><span>41123128心得:</span></p>
<p><span>這堂課學習到現在，我學習到了如何建立和維護網誌和網站，每週的網誌也讓我更能了解每次的進度，在課堂中也學習了解決衝突的技巧等，在每次的課堂任務中也讓我體會到小組分工的重要性。</span></p>
<p>41123126心得:</p>
<p>我在這門課學到了一個新的網頁概念，我在github上找到了許多其他創作者的內容，涵蓋的範圍之廣，不過要獲取他人的內容，也要先學會如何使用github，這門課讓我學到了許多關於github，創作網頁的技能，因為這門課，以後在使用不管是網路或是程式，在與世界接軌時，也用一定的基礎可以應對。</p>
<h2>g5</h2>
<p>此課程讓我學習到了github的許多用途</p>
<p>例如使用Codespaces 以及replit 去更新與維護倉儲</p>
<p></p>
<p>還有如何協同,還有使用blog將每周所做事情一一列出</p>
<p>其中也有將老師的影片上字幕 整理大綱 匯出逐字稿</p>
<p>在協同其中作業還有做到翻譯 一人分配一部份最後再去統整到一起</p>
<p>後續到了第十周還使用到了solidwork去繪製協同任務</p>
<p>倉儲連結</p>
<p><a href="https://github.com/41123122/cd2024">https://github.com/41123122/cd2024</a></p>
<p>blog連結</p>
<p><a href="https://41123122.github.io/cd2024/blog/">https://41123122.github.io/cd2024/blog/</a></p>
<p>以下為1~8周所做事項所拍的影片</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="//www.youtube.com/embed/acAbciXYtIM?si=v1cBXi2Ok8y0Z3j0" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>41123129:這堂課我學習了非常多，除了畫圖以外，更多的事關於電腦網路等程式方面的知識以及協同維護網站的方式，讓我了解到協同合作的重要性，老師在課堂上也鼓勵學生使用AI來加快做事效率，讓大家都知道未來科技的趨勢，雖然難度很高，有時候會不太清楚在幹嘛(其實是自己看不懂)但卻是我認為這個系少數有料的課</p>
<p></p>
<p></p>
<p>41123135:</p>
<p>這堂課讓我學習到了許多管理github的功能，也讓我知道了管理版次是多麼重要的工作，只是主要的協同部分還有點不是很熟練。也學習到了可以利用程式來控制物體的運動。</p>
<p></p>
<p>41123149:</p>
<p>這門協同產品設計課程讓我學會了如何使用 github 來更新blog，並<span>使用Replit、Codespaces去維護個人或分組網站，雖然學得不是很深，但我還是持續努力完成每周的分組作業。</span></p>
<p></p>
<p></p>
<p>41123131:</p>
<p>前面4周加入第四組後翻譯了論文的55~66頁</p>
<p>第五周將老師的影片上了字幕</p>
<p>到了第十周把任務三的platform使用solidwork繪製出來</p>
<p>透過這堂課程知道了github、replit 等等功能，也強調了分工合作，才能快速完成任務</p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41123131_nfu_edu_tw/EQGoppGu14BEk651TufslQABgeFShZZUB1a8bpbp46q2TA?e=GvwrNn">platform.STL</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41123131_nfu_edu_tw/EQGoppGu14BEk651TufslQABgeFShZZUB1a8bpbp46q2TA?e=h5cF7H">cd2024_2b_1_建立個人課程倉儲與網站</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41123131_nfu_edu_tw/EQGoppGu14BEk651TufslQABgeFShZZUB1a8bpbp46q2TA?e=h5cF7H">翻譯</a></p>
<p>41123134:</p>
<p>在這堂課我學習到了如何用replit，github建立網站，並運用replit長期的維護網頁及部落格。過程中也讓我學習到一個網站背後的維護者在操作上面的細節，如何讓網站精簡，美觀，都是我不曾碰過的領域。同時在維護的過程中也會遇到許多問題，不管是電腦網路突然斷掉，還是各組員同時更新時遇到了衝突，要如何解決，組員跟組員之間的討論讓我感覺到我們是一個團隊。<a href="https://lurl.cc/BkHHMT">https://lurl.cc/BkHHMT</a> 此部影片是cd2024 2a w2 4 利用 Replit 管理 Github Classroom 分組倉儲，由我上的字幕與後面彙整出來的逐字稿讓我清楚知道內容，在觀看上可以更方便且清楚且慢慢進入狀況。<a href="https://lurl.cc/JqAVvi">https://lurl.cc/JqAVvi </a>此部影片是我期中前所做的事情，裡面包含了個人github更新網站的紀錄，replit的大致情況，也讓我彙整了期中前這堂課在做什麼。</p>
<p>41123137:</p>
<p>協同產品設計實習課程自第1週上課到目前第11週,從個人與分組倉儲的建立及維護操作、翻譯Odoo軟體在產品生命週期管理、製造執行系統及其整合上的功能分析、將老師的教學影片進行字幕上傳、逐字稿以及大綱內容,分組影片報告,將每個組員各一分鐘的影片報告放到各分組網誌,說明已經完成的個人與團隊分配任務製作結果、實習任務鋼球平衡台零組件繪圖等等,結合了網際內容管理並透過分組形式來讓學員了解如何利用Replit、Codespace、Github、CoppeliaSim等套件或網站,這就是協同產品設計實習的課程目標！</p>
<p>41123139:</p>
<p>在前五周我加入了g3,組員分工使用AI完成<a href="https://replit.com/@INbunB/cd2024#downloads/%E7%BF%BB%E8%AD%AF%E6%96%87%E7%AB%A0">翻譯Odoo的論文</a>和<a href="https://replit.com/@INbunB/cd2024#downloads/%E5%BD%B1%E7%89%872">幫老師的影片上字幕</a>,並且放在倉儲和網誌。在第十周開始鋼球平衡台自動控制系統模擬的零組件繪製，我負責畫<a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41123139_nfu_edu_tw/EQddYVRixmNBicatYh3iyogBX0Ss4yPbkrqiASqoObAfKw?e=qg1PH6">base</a>。這門課程不需要課本並且在傳遞資訊上的速度跟其他課程不同,不是像一般課程一樣需要慢慢地翻課本才找到想要的資訊,並且組員間的協同分工,加快分組工作的速度。</p>
<p></p>
<p>40923244:</p>
<p>這次的課程開始前我完全不了解這些程式,每次影片都要重複看很多次才會懂,但是經過幾周的操作後<span>已慢慢理解如何運用,</span>尤其是最近維護群組上傳影片後才發現原來已經默默地做了很多東西,也才了解現在的程式跟ai對我們影響多大</p>
<p></p>
<p></p>
<p>40923131</p>
<p></p>
<p>41123114心得:</p>
<p>這門課我學到了怎麼使用github以及replit分工合作，然後再把每個人的資料整合，藉由老師給的專案設計學習到了基礎的python設計，以及使用NX繪製然後跟程式結合使其可以運作，老師也會鼓勵我們多使用AI學習和解決問題，讓我了解到AI雖然很聰明不過也很笨，如果知識不夠沒辦法找出問題核心提問，也無法解決問題，不過透過上述這些課題及與AI的合作讓我學習到了許多平常不會接觸到的知識，增加了許多對自己每使用的3C產品和AI還有程式設計的認識。</p>
<p></p>
<p>41123107心得:</p>
<p>在這堂產品協同設計課程學習到如何使用github、replit、nx等作業工具，學習到團隊合作的重要性，也學會了使用chatgpt尋找答案。</p>
<p></p>
<p><span>41123117心得:</span></p>
<p><span>這學期初學到了新的知識，使用replit、codespaces去維護個人或分組網站的內容，並且學到了如何創建新的分支來進行同步上傳避免全部撞在一起，還有跟chatgpt對話讓我可以自己解決許多問題，真的讓我受益良多</span></p>
<p><span>41123128心得:</span></p>
<p><span>這堂課學習到現在，我學習到了如何建立和維護網誌和網站，每週的網誌也讓我更能了解每次的進度，在課堂中也學習了解決衝突的技巧等，在每次的課堂任務中也讓我體會到小組分工的重要性。</span></p>
<p>41123126心得:</p>
<p>我在這門課學到了一個新的網頁概念，我在github上找到了許多其他創作者的內容，涵蓋的範圍之廣，不過要獲取他人的內容，也要先學會如何使用github，這門課讓我學到了許多關於github，創作網頁的技能，因為這門課，以後在使用不管是網路或是程式，在與世界接軌時，也用一定的基礎可以應對。</p>
<p>41123115心得:</p>
<p>剛接觸這堂課先認識到了小組分工合作的重要性,利用Replit或是codespace來更新小組倉儲內容,這堂課不單單只是讓我學習到繪圖設計,也學到了網際網路各方面知識,這堂課是延續大二上的內容是利用NX轉檔到coppeliasim來模擬鋼球移動的模擬程式,這次也有用到所以應該多少會比較好理解老師在說什麼.</p>
<p></p>
<p>40923244:</p>
<p>這次的課程開始前我完全不了解這些程式,每次影片都要重複看很多次才會懂,但是經過幾周的操作後<span>已慢慢理解如何運用,</span>尤其是最近維護群組上傳影片後才發現原來已經默默地做了很多東西,也才了解現在的程式跟ai對我們影響多大</p>
<p></p>
<p>41123114心得:</p>
<p>這門課我學到了怎麼使用github以及replit分工合作，然後再把每個人的資料整合，藉由老師給的專案設計學習到了基礎的python設計，以及使用NX繪製然後跟程式結合使其可以運作，老師也會鼓勵我們多使用AI學習和解決問題，讓我了解到AI雖然很聰明不過也很笨，如果知識不夠沒辦法找出問題核心提問，也無法解決問題，不過透過上述這些課題及與AI的合作讓我學習到了許多平常不會接觸到的知識，增加了許多對自己每使用的3C產品和AI還有程式設計的認識。</p>
<p></p>
<p>41123124</p>
<p></p>
<p>40923118:</p>
<p>已經上到第11週了 但我的進度還在第4週的影片翻譯 而且在分組網站改版時還衝突不斷 個人倉儲也沒什麼內容 不過還有一個月的時間 希望透過觀看老師錄製的教學影片且實際操作  並透過時詢問老師、同學 解決遇到的問題和衝突  可以順利通過這門課</p>
<p></p>
<p>40923131</p>
<p>協同產品設計讓我學習到如何正確地與其他組員溝通，在遇到問題時也讓我們認真思考該如何去解決衝突，再一些棘手且無法處理的問題也會向老師尋求幫助並了解其解決方法。</p>
<p></p>
<p>40923154:</p>
<p>目前為止的課程中，我學習了不少關於程式運作阿、AI的使用來協助作業和溝通解決，以前都有種固有思維認為網路上的回答都是那種文言文的感覺，自從真的開始接觸ChatGPT這種AI才發現其實它們演化到可以用通俗的語言來解釋問題，這發現可以讓我在往後人生不管在工作上、生活上都多了一種解決問題的手段。</p>
<p></p>
<p></p>
<h2>g6</h2>
<p>41023107:</p>
<p><span>在11週的協同產品與實習課程中，學到了許多工具和平台，了解了 GitHub 倉儲的整合、運用和版次的重要性。通過使用 Codespace 和 Replit 協同維護網頁，利用 NX 和 Coppeliasim 繪製零組件，也運用 AI 解決問題和進行翻譯。因此組員們必須分工合作才能按時完成每週指派的任務，彼此之間的合作和溝通至關重要。</span></p>
<p></p>
<p><span></span></p>
<p>41023107:</p>
<p><span>在11週的協同產品與實習課程中，學到了許多工具和平台，了解了 GitHub 倉儲的整合、運用和版次的重要性。通過使用 Codespace 和 Replit 協同維護網頁，利用 NX 和 Coppeliasim 繪製零組件，也運用 AI 解決問題和進行翻譯。因此組員們必須分工合作才能按時完成每週指派的任務，彼此之間的合作和溝通至關重要。</span></p>
<p></p>
<p>41123115心得:</p>
<p>剛接觸這堂課先認識到了小組分工合作的重要性,利用Replit或是codespace來更新小組倉儲內容,這堂課不單單只是讓我學習到繪圖設計,也學到了網際網路各方面知識,這堂課是延續大二上的內容是利用NX轉檔到coppeliasim來模擬鋼球移動的模擬程式,這次也有用到所以應該多少會比較好理解老師在說什麼.</p>
<p></p>
<p>41023124 : </p>
<p></p>
<p>協同產品設計與實習這門課相較於較為傳統的上課方式有很大的不同，課堂並不是只有死板的知識與課本，需要利用網絡、AI去幫助自己與群組完成共同的編輯與協同，在這門課中使用 Github、Codespace、Replit、Odoo、NX、Coppeliasim去完成協同與繪製任務，也強調了組員之間的分工與合作，才能迅速的完成老師在每一周交代的任務。</p>
<p></p>
<p></p>
<p>w11任務----41023122心得</p>
<p> 每週我都會使用協同產品，並將遇到的問題或當天使用的工具記錄下來，以便在下次遇到問題能更快解決問題。這種持續的使用讓我能夠更加熟悉協同產品的功能和特性，並且能夠更有效地與團隊成員合作和溝通。我也發現每周使用協同產品有助於提高我的工作效率和組織能力，讓我能夠更好地管理我的時間和任務。</p>
<p> 在協同產品中，我被指派了剪輯影片、翻譯論文以及更新每日日誌的任務。這些任務需使用一些特別的方式，以確保我的工作符合標準並達到預期效果。通過這些任務，我學到了新的解決問題的思路，並且學習如何有效地更新每日日誌以跟蹤和記錄我的工作進度和成果。這些任務讓我更加了解自己的問題和當下了解程度，並且提升了我的專業素養和技能水準。</p>
<p>在新學期開始時，我遇到了電腦問題，這迫使我不得不到圖書館去使用協同產品。這段時間，我盡量在課堂上完成工作，以免拖延作業並避免給組員帶來困擾。這樣做讓我能夠更好地利用時間和精力來完成任務。這種改變讓我更加重視工作環境對於效率和品質的影響，並且激勵我更積極地打造一個適合自己工作的環境。</p>
<p> 在使用協同產品時，我發現我可以隨時隨地使用任何裝置來訪問和編輯文件。這種靈活性讓我可以更有效地組織我的工作流程，並確保我能夠隨時保持與團隊的溝通和協作。無論是在家裡、圖書館還是在移動中，我都可以輕鬆地訪問協同產品，並且與團隊成員共享和編輯文件。這種便利性讓我更加靈活地進行工作，並且讓我更容易地與團隊合作和協作，提高了我們的工作效率和效果。</p>
<p></p>
<h2>g7</h2>
<p></p>
<p>本堂課為協同產品設計與實習，前三週為設定個人倉儲，了解<span> </span><span>Github、</span>Replit與Codespace如何使用與其上傳協同原理和創建PuTTy，第四週與第五週將前三週的每一個教學錄影影片進行字幕的編輯與逐字稿，相較於前三週，第四週進度與任務速度有點快，因為剛開始並不是每個組員都有參加，所以少數組員需要完成所有影片字幕與逐字稿。</p>
<p>協同產品設計與實習這門課相較於較為傳統的上課方式有很大的不同，課堂並不是只有死板的知識與課本，需要利用網絡、AI去幫助自己與群組完成共同的編輯與協同，在這門課中使用 Github、Codespace、Replit、Odoo、NX、Coppeliasim去完成協同與繪製任務，也強調了組員之間的分工與合作，才能迅速的完成老師在每一周交代的任務。</p>
<p>目前到了w11，上課時段都是前往0810電腦教室使用USB下載的近端、Replit與Codespace相互協同編輯，有時候下課後在教室沒有做完，就回宿舍使用自己的筆電，相較於自己的筆電，學校的電腦每次重啟都需要加入鑰匙和自己習慣的設定，而且滑鼠不好用。</p>
<p>41123141</p>
<p>41123143:</p>
<p><span>協同產品設計是一門極具挑戰性且充滿樂趣的課程，在這門課程我們使用工具和平台來管理我們的專案，例如github、NX、Python、Replit</span><span>.</span><span>.</span><span>.等等。這門課強調團隊合作的重要性，並且學會如何更好地組織和管理我們的專案，並最終創造出更優秀的產品。</span></p>
<p>41123141:</p>
<p>起初每個人都要建立倉儲，如何在 import 到 replit（或是也可以用 Codespaces 進行改版），可随時在裡面增加或更改內容和學會網誌的運用，就可進行動作 push便在靜態看到所推的資料內容（即便你不再學校也是可以做的），現在有了倉儲和能讓我們改版程式（裡面參雜了 Python/Java/Brython等語言在裡面），從開學到目前做了第一：如何為網誌與改版（教導組員如何操作）第二：利用odo0生成文章翻譯（我是用Word 做翻譯，有分配給組員）第三：把老師上課的影片要生成字幕、要把字幕弄成逐字與撰寫摘要心得（教導組員如何用最快的方式完成）第四：錄攝期中影片說明上課內容（有分配給組員）第五：就是W10任務（這過起便開始畫岡）第六：就是本週所說的，透過獨立分支進行資料改版提交與推送，等個人階段性版本確定後，再與分組分支合併，最後各組的階段性版本再與建立網頁的主分支進行合併.這段期間在組員身上所發生的問題整理幾個常見的1.push 不成功 2. 撰寫網誌3.倉儲import到 replit 裡 等，我也是盡量解救每個人所發生的問題.＜後續會丟影片和相關連結&gt;</p>
<p>41123143:</p>
<p><span>協同產品設計是一門極具挑戰性且充滿樂趣的課程，在這門課程我們使用工具和平台來管理我們的專案，例如github、NX、Python、Replit</span><span>.</span><span>.</span><span>.等等。這門課強調團隊合作的重要性，並且學會如何更好地組織和管理我們的專案，並最終創造出更優秀的產品。</span></p>
<p> 41123124</p>
<p></p>
<p><span>41123144:</span></p>
<p><span>這門課主要使用了Replit、Codespace 來維護自己與組別的網站,並且須要使用如 ChatGPT 、NX 來完成每週的課程任務，而所有的組別任務皆須分工來完成才能更有效率地達成目標，這更讓我體認到小組分工的重要性。</span></p>
<p></p>
<p></p>
<h2>g8</h2>
<p><br/>41023108:</p>
<p>此次課程除了學習到老師指派任務之外，還開啟了我遇到問題如何自行解決這個開關，其實在前面幾週上課內容中，有些任務並不是當週就能完全吸收，是經過好幾週不斷遇到問題並解決掉才理解老師上課影片所講解的內容，其實前w9整個下來也算是有點收穫，這我懂得運用chatgpt尋找問題並解決它，這部分從我個人網站頁面能看到內容。</p>
<p></p>
<p>41023110:</p>
<p><br/> 在這門協同產品的課程中，探索了許多關於如何有效地管理網路內容的知識和技巧。但我清楚地意識到，我對網路操作的吸收進度慢能力不好。有些同學已經很熟悉了，並且同學也課後跟我講解過許多次，反覆更改用詞想讓我理解真正含意，但我自身的能力還不夠、理解有點慢、技術不夠熟練。老師的講解與同學幫助促進我的學習理解能力和提高解決問題的速度。我要善用資源。老師在課堂上提供了許多學習資源。當我有任何問題或困惑，會向老師和同學尋求幫助。在錯誤的地方要勇於嘗試並實踐，一直錯誤我就知道會在那裡出現問題。每一次嘗試都可以對後續會遇到的問題提高解決機率。</p>
<p></p>
<p></p>
<p>41023211:</p>
<p>上老師的課已經四次了，大一一門大二兩門，可惜的是大二下學期被當，大一就覺得老師上課方式很特別，不管是上課模式還是交作業啊，跟其他老師都不太一樣，上大學第一次交作業是要用程式交作業，很特別的一門課，但對於我在高中時沒有學過計算機程式來說太難了，很多時候作業做完，但程式有問題推不上去，這樣確實挺麻煩的，若用學校網站交作業就會輕鬆很多，不過我也尊重老師的上課模式，推不上去就求助其他人幫忙，希望老師上課可以多聽一下學生的意見，謝謝。</p>
<h1>Brython</h1>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p>=======</p>
<p>41123124</p>
<h1>Brython</h1>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; main</p>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>
<div id="gtx-trans" style="position: absolute; left: -11px; top: 3020.65px;">
<div class="gtx-trans-icon"></div>
</div>